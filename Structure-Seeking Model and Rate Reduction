import numpy as np
import matplotlib.pyplot as plt

class StructureSeekingModel:
    def __init__(self, data, num_iterations, threshold):
        self.data = np.array(data, dtype=float)
        self.num_iterations = num_iterations
        self.threshold = threshold

    def reduce_rate(self):
        """Reduce the rate of data change based on a threshold."""
        for iteration in range(self.num_iterations):
            self.data = self.apply_rate_reduction(self.data)
        return self.data

    def apply_rate_reduction(self, data):
        """Apply a rate reduction mechanism."""
        # Simple thresholding for rate reduction
        reduced_data = np.where(np.abs(data) > self.threshold, data, 0)
        return reduced_data

    def visualize_results(self, title=''):
        """Display the original and reduced data."""
        plt.figure(figsize=(12, 6))
        plt.subplot(1, 2, 1)
        plt.title('Original Data')
        plt.plot(self.data, marker='o')
        plt.grid()

        reduced_data = self.reduce_rate()
        plt.subplot(1, 2, 2)
        plt.title('Rate Reduced Data')
        plt.plot(reduced_data, marker='o', color='orange')
        plt.grid()

        plt.suptitle(title)
        plt.show()

# Example usage
if __name__ == "__main__":
    # Create a synthetic dataset (e.g., random data)
    np.random.seed(0)
    initial_data = np.random.randn(100)

    # Set parameters for the StructureSeekingModel
    num_iterations = 10
    threshold = 0.5

    # Initialize the StructureSeekingModel object
    structure_seeking_model = StructureSeekingModel(initial_data, num_iterations, threshold)

    # Visualize the original and rate reduced data
    structure_seeking_model.visualize_results(title='Structure-Seeking Model with Rate Reduction')
